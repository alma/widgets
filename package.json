{
  "name": "@alma/widgets",
  "version": "2.2.8",
  "description": "Widgets to easily display information from Alma - https://getalma.eu",
  "keywords": [],
  "main": "dist/widgets.js",
  "umd:main": "dist/widgets.umd.js",
  "module": "dist/widgets.m.js",
  "typings": "dist/types/index.d.ts",
  "files": [
    "dist"
  ],
  "author": "Olivier Lance <olivier.lance@getalma.eu>",
  "repository": {
    "type": "git",
    "url": "https://github.com/alma/widgets"
  },
  "license": "MIT",
  "engines": {
    "node": ">=6.0.0"
  },
  "scripts": {
    "start": "NODE_ENV=development microbundle --name Alma --sourcemap --jsx React.createElement --jsxImportSource react --globals react/jsx-runtime=jsx --define process.env.NODE_ENV=development --css-modules true --format umd watch",
    "test": "NODE_ENV=test jest --coverage",
    "test:no-coverage": "NODE_ENV=test jest",
    "test:watch": "NODE_ENV=test jest --watch",
    "test:prod": "npm run lint && npm run test -- --no-cache",
    "lint": "npx eslint src --ext .js,.ts,.tsx",
    "lint:fix": "npx eslint --fix src --ext .js,.ts,.tsx",
    "prebuild": "rm -rf dist",
    "build": "NODE_ENV=production microbundle --name Alma --sourcemap --jsx React.createElement --jsxImportSource react --globals react/jsx-runtime=jsx --define process.env.NODE_ENV=production --css-modules true",
    "semantic-release": "semantic-release",
    "translations:extract": "formatjs extract 'src/**/*.ts*' --out-file 'src/intl/messages.json' --format simple --ignore 'src/*.d.ts' && prettier ./src/intl --write",
    "translations:upload": "crowdin upload sources",
    "translations:download": "crowdin download && prettier ./src/intl --write"
  },
  "devDependencies": {
    "@babel/plugin-proposal-class-properties": "^7.12.1",
    "@babel/plugin-proposal-export-default-from": "^7.12.1",
    "@babel/plugin-transform-react-jsx": "^7.12.7",
    "@babel/plugin-transform-runtime": "^7.12.1",
    "@babel/preset-env": "^7.12.7",
    "@babel/preset-react": "^7.12.7",
    "@babel/preset-typescript": "^7.12.7",
    "@commitlint/cli": "^11.0.0",
    "@commitlint/config-conventional": "^11.0.0",
    "@crowdin/cli": "^3.7.1",
    "@formatjs/cli": "^4.4.0",
    "@google/semantic-release-replace-plugin": "^1.0.2",
    "@octokit/core": "^3.2.4",
    "@rollup/plugin-image": "^2.0.5",
    "@semantic-release/changelog": "^5.0.1",
    "@semantic-release/git": "^9.0.0",
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/react": "^12.1.2",
    "@types/classnames": "^2.2.11",
    "@types/jest": "^26.0.16",
    "@types/lodash.isplainobject": "^4.0.6",
    "@types/no-scroll": "^2.1.0",
    "@types/node": "^14.14.10",
    "@types/react": "^17.0.30",
    "@types/react-dom": "^17.0.9",
    "@typescript-eslint/eslint-plugin": "^4.9.1",
    "@typescript-eslint/parser": "^4.9.1",
    "babel-plugin-css-modules-transform": "^1.6.2",
    "commitizen": "^4.2.1",
    "core-js": "^3.8.1",
    "cz-conventional-changelog": "^3.3.0",
    "eslint": "^7.15.0",
    "eslint-config-prettier": "^6.15.0",
    "eslint-plugin-jest": "^24.1.0",
    "expect-type": "^0.9.2",
    "husky": "^4.3.5",
    "jest": "^26.6.0",
    "jest-config": "^26.6.0",
    "lint-staged": "^10.5.3",
    "lodash.get": "^4.4.2",
    "microbundle": "github:olance/microbundle#rollup/config-override",
    "postcss-assets": "^5.0.0",
    "prettier": "^2.2.1",
    "rollup": "^1.32.1",
    "rollup-plugin-copy": "^3.4.0",
    "sass": "^1.30.0",
    "semantic-release": "^17.3.0",
    "tailwindcss": "^1.9.6",
    "ts-essentials": "^7.0.1",
    "ts-jest": "^26.4.1",
    "typedoc": "^0.19.2",
    "typescript": "^4.1.2"
  },
  "dependencies": {
    "@alma/client": "^1.1.1",
    "@types/react-modal": "^3.13.1",
    "classnames": "^2.2.6",
    "date-fns": "^2.25.0",
    "lodash.isplainobject": "^4.0.6",
    "no-scroll": "^2.1.1",
    "react": "^17.0.2",
    "react-dom": "^17.0.2",
    "react-intl": "^5.20.13",
    "react-modal": "^3.14.3",
    "react-responsive": "^9.0.0-beta.6"
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  },
  "eslintConfig": {
    "root": true,
    "parser": "@typescript-eslint/parser",
    "extends": [
      "eslint:recommended",
      "prettier"
    ],
    "rules": {
      "@typescript-eslint/no-unused-vars": [
        "warn",
        {
          "varsIgnorePattern": "^_+$",
          "argsIgnorePattern": "^_+$"
        }
      ]
    },
    "overrides": [
      {
        "files": [
          "*.ts",
          "*.tsx"
        ],
        "excludedFiles": [
          "*.test.ts"
        ],
        "env": {
          "browser": true
        },
        "extends": [
          "plugin:@typescript-eslint/recommended",
          "prettier/@typescript-eslint"
        ],
        "plugins": [
          "@typescript-eslint"
        ]
      },
      {
        "files": [
          "*.js"
        ],
        "env": {
          "node": true
        }
      },
      {
        "files": [
          "*.test.ts"
        ],
        "extends": [
          "plugin:@typescript-eslint/recommended",
          "prettier/@typescript-eslint",
          "plugin:jest/recommended"
        ],
        "env": {
          "es6": true,
          "node": true,
          "jest/globals": true
        },
        "plugins": [
          "@typescript-eslint",
          "jest"
        ],
        "parserOptions": {
          "ecmaVersion": 2019,
          "sourceType": "module"
        },
        "rules": {
          "jest/expect-expect": [
            "warn",
            {
              "assertFunctionNames": [
                "expect",
                "expectTypeOf"
              ]
            }
          ]
        }
      }
    ]
  },
  "eslintIgnore": [
    "node_modules",
    "dist"
  ],
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "lint-staged",
      "pre-push": "npm run test:prod && npm run build"
    }
  },
  "jest": {
    "testEnvironment": "jsdom",
    "rootDir": "src",
    "moduleNameMapper": {
      "\\.s?css": "<rootDir>/__mocks__/styleMock.js",
      "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
      "^@/(.*)$": [
        "<rootDir>/src/$1"
      ],
      "^test/(.*)$": [
        "<rootDir>/test/$1"
      ]
    },
    "moduleFileExtensions": [
      "ts",
      "tsx",
      "js"
    ],
    "coveragePathIgnorePatterns": [
      "/node_modules/",
      "/test/"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 0,
        "functions": 0,
        "lines": 0,
        "statements": 0
      }
    },
    "collectCoverageFrom": [
      "src/**/*.{js,ts}"
    ]
  },
  "lint-staged": {
    "{src,test}/**/*.ts": [
      "prettier --write"
    ]
  },
  "prettier": {
    "semi": false,
    "singleQuote": true,
    "trailingComma": "all"
  },
  "publishConfig": {
    "access": "public"
  },
  "release": {
    "plugins": [
      "@semantic-release/commit-analyzer",
      [
        "@google/semantic-release-replace-plugin",
        {
          "replacements": [
            {
              "files": [
                "dist/**"
              ],
              "from": "%%_SEMANTIC_VERSION_%%",
              "to": "${nextRelease.version}",
              "countMatches": true
            }
          ]
        }
      ],
      "@semantic-release/release-notes-generator",
      [
        "@semantic-release/changelog",
        {
          "changelogFile": "CHANGELOG.md"
        }
      ],
      "@semantic-release/npm",
      "@semantic-release/github",
      [
        "@semantic-release/git",
        {
          "assets": [
            "dist/**",
            "CHANGELOG.md",
            "package.json"
          ],
          "message": "chore(release): ${nextRelease.version} [skip ci]\n\n${nextRelease.notes}"
        }
      ]
    ]
  }
}
